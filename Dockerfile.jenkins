# Dockerfile.jenkins
FROM jenkins/jenkins:lts-jdk17

# Pass Host User, Group, and Docker Group IDs as build arguments
ARG UID=1000
ARG GID=1000
ARG DOCKER_GID=999

# Switch to root user to install dependencies and manage users
USER root

# Install Docker CLI and other dependencies
RUN apt-get update && apt-get install -y \
    lsb-release \
    sudo \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Add Docker's official GPG key and repository
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list

# Install Docker CLI
RUN apt-get update && apt-get install -y docker-ce-cli && rm -rf /var/lib/apt/lists/*

# Create docker group with host's docker group ID and add jenkins user to it
RUN if [ -n "$DOCKER_GID" ] && [ "$DOCKER_GID" != "0" ]; then \
        if getent group $DOCKER_GID; then \
            usermod -aG $(getent group $DOCKER_GID | cut -d: -f1) jenkins; \
        else \
            groupadd -g $DOCKER_GID docker && usermod -aG docker jenkins; \
        fi; \
    fi

# Adjust jenkins user/group IDs to match host
RUN if [ -n "$GID" ] && [ "$GID" != "0" ]; then \
        existing_gid=$(getent group jenkins | cut -d: -f3); \
        if [ "$existing_gid" != "$GID" ]; then \
            groupmod -g $GID jenkins; \
        fi; \
    fi

RUN if [ -n "$UID" ] && [ "$UID" != "0" ]; then \
        existing_uid=$(id -u jenkins); \
        if [ "$existing_uid" != "$UID" ]; then \
            usermod -u $UID jenkins; \
        fi; \
    fi

# Give jenkins user sudo privileges
RUN echo "jenkins ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Create and set ownership of jenkins home directory
RUN mkdir -p /var/jenkins_home && chown jenkins:jenkins /var/jenkins_home

# Not sure yet if I want to add these steps:
# COPY plugins.txt /usr/share/jenkins/ref/plugins.txt
# RUN jenkins-plugin-cli --plugin-file /usr/share/jenkins/ref/plugins.txt

USER jenkins

# Set Jenkins environment variables
ENV JAVA_OPTS="-Djenkins.install.runSetupWizard=false"