name: CI
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    env:
      LISP: sbcl-bin
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Common Lisp Environment
        uses: 40ants/setup-lisp@v4
        with:
          asdf-system: cl-lz4-rs
      
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            .qlot/
            ~/.roswell/
          key: ${{ runner.os }}-qlot-${{ hashFiles('qlfile*') }}
          restore-keys: |
            ${{ runner.os }}-qlot-
      
      - name: Install Qlot
        run: ros install qlot
      
      - name: Run Tests with Progressive Fallback
        shell: bash
        run: |
          # Function to try multiple test strategies
          run_tests() {
            echo "=== Attempting Strategy 1: Full qlot environment ==="
            if qlot install && qlot exec make test; then
              echo "✓ SUCCESS: Tests passed with full qlot environment"
              return 0
            fi
            
            echo "=== Attempting Strategy 2: Qlot install with retry ==="
            for i in {1..3}; do
              echo "Retry $i/3 for qlot install..."
              if qlot install; then
                if qlot exec make test; then
                  echo "✓ SUCCESS: Tests passed with qlot (retry $i)"
                  return 0
                fi
                break
              fi
              sleep $((2 ** $i))
            done
            
            echo "=== Attempting Strategy 3: Direct quicklisp + make test ==="
            if ros run -q -e "(ql:quickload :cl-lz4-rs)" && make test; then
              echo "✓ SUCCESS: Tests passed with direct quicklisp"
              return 0
            fi
            
            echo "=== Attempting Strategy 4: Local tests (final fallback) ==="
            if make test-local; then
              echo "✓ SUCCESS: Tests passed in local mode"
              return 0
            fi
            
            echo "✗ FAILURE: All test strategies failed"
            return 1
          }
          
          # Run the progressive fallback
          run_tests
